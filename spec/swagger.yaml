swagger: '2.0'
info:
  version: v1
  title: Jovix API
  description: >-
    Provides ability to track and monitor Material Readiness in the Jovix
    product.
host: dev3.atlasrfid.com
basePath: /jovixqa
schemes:
  - https
paths:
  '/api/v1/attachments/{id}/file':
    get:
      tags:
        - Attachments
      description: Gets the attachment file.
      operationId: Attachment_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/token:
    get:
      tags:
        - Authentication
      description: >-
        This request authenticates the user and returns an access token for use
        in authenticated calls to the Jovix API.<br>The client is authenticated
        by means of an Authorization header included in the request. There are
        two authentication schemes supported:<br><br>- The 'Basic' scheme must
        be used for initial authentication. Credentials should be formatted as
        usual for basic authentication.
        (https://en.wikipedia.org/wiki/Basic_access_authentication) <br>- The
        'Bearer' scheme should be used with subsequent requests to refresh a
        token that has expired or is nearing expiration. This scheme requires a
        JSON Web Token token on the Authorization header. Using a token helps
        minimize the transmission of user credentials over the network.
        (https://en.wikipedia.org/wiki/JSON_Web_Token) <br>If the user is
        successfully authenticated, the response will be an object containing
        both an access token and a refresh token.<br>If the passed credentials
        or refresh token are not valid for any reason, then the response will be
        a 401.
      operationId: Token_GetToken
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Jovix.Application.Security.TokenResponse'
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/catalog-items:
    get:
      tags:
        - Catalog Items
      description: >-
        Gets a list of catalog items that represent the class definitions of
        materials.<br><br>Filter(s):<br>- projectId<br>- materialTypeId <br>-
        disciplineId <br>- name <br>- description <br>- shortDescription
      operationId: CatalogItemSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.CatalogItems.Views.CatalogItemView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Catalog Items
      description: Creates a catalog item.
      operationId: CatalogItemCreate_PostCatalogItemAsync
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: catalogItemPost
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.CatalogItems.CatalogItemPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.CatalogItems.Views.CatalogItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/catalog-items/{id}':
    get:
      tags:
        - Catalog Items
      description: Gets a catalog item with the specified identifier.
      operationId: CatalogItem_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.CatalogItems.Views.CatalogItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Catalog Items
      description: Deletes a catalog item with specified parameters.
      operationId: CatalogItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NotFound
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Catalog Items
      description: Updates specified values on a catalog item.
      operationId: CatalogItemUpdate_PatchCatalogItem
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.CatalogItems.Views.CatalogItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/catalog-items/modified:
    get:
      tags:
        - Catalog Items
      description: Returns recently modified catalog items.
      operationId: CatalogItemsModified_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: since
          in: query
          required: false
          type: string
        - name: pageToken
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.ModifiedRecords[Jovix.Application.V1.CatalogItems.Views.CatalogItem]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/facilities:
    get:
      tags:
        - Facilities
      description: >-
        Gets a list of facilities that meet the specified filter
        criteria.<br><br>Available Filters:<br>- name<br>- jobId<br>-
        siteId<br>.
      operationId: FacilitySearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Facilities.Views.FacilityResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Facilities
      description: Creates a new facility with the fields provided.
      operationId: FacilityCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: facility
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.Facilities.Views.FacilityResourceView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Facilities.Views.FacilityResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/facilities/{id}':
    get:
      tags:
        - Facilities
      description: Gets a facility with the specified identifier.
      operationId: Facility_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Facilities.Views.FacilityResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Facilities
      description: Delete a facility from fields provided
      operationId: FacilityDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Facilities
      description: Updates specified values on a facility.
      operationId: FacilityUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Facilities.Views.FacilityResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/flags:
    get:
      tags:
        - Flags
      description: >-
        Gets a list of flags.<br><br>Available Filter(s):<br>- isActive
        (default)<br>- isMobile<br>- isReceiptFlag<br>- isMaterialFlag<br>-
        isShippingUnitFlag
      operationId: Flags_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: f
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.MaterialFlags.MaterialFlag[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/flags/{id}/description-options':
    get:
      tags:
        - Flags
      description: Gets the description options for the specified flag.
      operationId: MaterialFlagsLookupOptions_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.MaterialFlags.MaterialFlagLookupOption[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/jobs:
    get:
      tags:
        - Jobs
      description: >-
        Gets a list of jobs that meet the specified filter
        criteria.<br><br>Available Filters:<br>- abbreviation<br>- name<br>-
        projectId<br>- isActive
      operationId: JobSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Jobs.Views.JobResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Jobs
      description: Creates a job with the provided details
      operationId: JobCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: job
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobResourceView'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Jobs.Views.JobResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/jobs/{id}':
    patch:
      tags:
        - Jobs
      description: Updates specified values on a job.
      operationId: JobUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Jobs.Views.JobResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/jobs/{jobId}':
    get:
      tags:
        - Jobs
      description: Gets a job with the specified identifier.
      operationId: Job_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: jobId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Jobs.Views.JobResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Jobs
      description: Deletes a job with the specified identifier.
      operationId: Job_Delete
      consumes: []
      produces: []
      parameters:
        - name: jobId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/material-issue-items:
    get:
      tags:
        - Material Issue Items
      description: >-
        Gets a list of material issue items with the specified
        filters.<br><br>Available Filters:<br>- material issue id<br>
      operationId: IssueItemSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.IssueItems.Views.IssueItemView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Material Issue Items
      description: >-
        Creates a new issue item with the fields provided.<br><br>Required
        fields:<br>- materialIssue<br>- quantityIssued<br>- material or
        pickListPickedItem<br><br>Material and pick list picked item are
        mutually exclusive.
      operationId: IssueItemCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: issueItem
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.IssueItems.Views.IssueItemPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.IssueItems.Views.IssueItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/material-issue-items/{id}':
    get:
      tags:
        - Material Issue Items
      description: Gets a material issue item with the specified identifier.
      operationId: IssueItem_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.IssueItems.Views.IssueItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Material Issue Items
      description: Deletes the material issue item with the specified identifier.
      operationId: IssueItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Material Issue Items
      description: >-
        Updates specified values on a material issue item.<br><br>Updatable
        Fields: <br>- quantityIssued
      operationId: IssueItemUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.IssueItems.Views.IssueItemView]
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/material-issues:
    get:
      tags:
        - Material Issues
      description: >-
        Gets a list of material issues with the specified
        filters.<br><br>Available Filters:<br>- name<br>- jobId<br>-
        statusId<br><br>
                    Default Status Ids:<br>- Open - 0<br>- In Process - 1<br>- Submitted - 2<br>- Closed - 3<br>- Rejected - 4
      operationId: IssueSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Issues.Views.IssueView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Material Issues
      description: |-
        Creates a material issue with the provided details.
                                                <br><br>Required fields:
                                                <br>- name
                                                <br>- job
                                                <br>- issuedToEmployee - Only if project setting for "Require 'Issued To' and 'Issued By' at MIR creation" is enabled
                                                <br>- issuedByEmployee - Only if project setting for "Require 'Issued To' and 'Issued By' at MIR creation" is enabled
      operationId: IssueCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: issuePost
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Issues.Views.IssuePost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Issues.Views.IssueView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/material-issues/{id}':
    delete:
      tags:
        - Material Issues
      description: Deletes the material issue with the specified identifier.
      operationId: IssueDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Material Issues
      description: |-
        Updates a material issue with the provided details.
                                                <br><br>Updatable fields:
                                                <br>- description
                                                <br>- notes
                                                <br>- issuedToEmployee - Only if project setting for "Require 'Issued To' and 'Issued By' at MIR creation" is disabled
                                                <br>- issuedByEmployee - Only if project setting for "Require 'Issued To' and 'Issued By' at MIR creation" is disabled
      operationId: IssueUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Issues.Views.IssueView]
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/material-issues/{issueId}':
    get:
      tags:
        - Material Issues
      description: Gets a material issue with the specified identifier.
      operationId: Issue_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: issueId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Issues.Views.IssueView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/materials:
    get:
      tags:
        - Materials
      description: >-
        Gets a list of materials.<br><br>One of the following search criteria is
        required:<br>- keySearch<br>- barcode<br><br>Examples:<br><br>Search by
        partial match of key fields (i.e., Material ID or Control Number):<br>
        /materials?keySearch=abcd<br><br>Search by barcode value:<br>
        /materials?barcode=abcd
      operationId: MaterialSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: keySearch
          in: query
          required: false
          type: string
        - name: barcode
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Materials.Views.MaterialView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Materials
      description: Creates a material.
      operationId: MaterialCreate_PostMaterialAsync
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: materialPost
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Materials.MaterialPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Materials.Views.MaterialView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/materials/{id}':
    get:
      tags:
        - Materials
      description: Gets a material with specified identifier.
      operationId: Material_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Materials.Views.MaterialView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Materials
      description: Deletes a material with specified identifier.
      operationId: MaterialDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/named-locations:
    get:
      tags:
        - Named Locations
      description: >-
        Gets a list of matching named locations.<br><br> Required Filter(s):
        <br>- name <br><br> When filtering by facilityId and/or siteId, the name
        constraint must also be provided.
      operationId: NamedLocationSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Locations.NamedLocation[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Named Locations
      description: Creates a new named location with fields provided.
      operationId: NamedLocationCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: location
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.Locations.Views.NamedLocationResourceView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Locations.Views.NamedLocationResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/named-locations/{id}':
    get:
      tags:
        - Named Locations
      description: Gets a named location with specified identifier.
      operationId: NamedLocations_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: expand
          in: query
          required: false
          type: string
        - name: fields
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Locations.NamedLocation]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Named Locations
      description: Deletes a named location with specified identifier.
      operationId: NamedLocationDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Named Locations
      description: Updates specified values on a named location.
      operationId: NamedLocationUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Locations.Views.NamedLocationResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/pick-list-items:
    get:
      tags:
        - Pick List Items
      description: >-
        Gets a list of pick list items with the specified
        filters.<br><br>Available Filters:<br>- pickListId<br>- pickListName
      operationId: PickListItemSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Pick List Items
      description: >-
        Creates a pick list with the provided details. Required fields are:<br>-
        pickList<br>- catalogItem<br>- material<br>-
        pickQuantity<br><strong>Note: Either catalogItem OR material are
        required, but NOT both.
      operationId: PickListItemCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: pickListPostBody
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.PickListItems.Views.PickListItemPost
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/pick-list-items/{id}':
    get:
      tags:
        - Pick List Items
      description: Gets a pick list item with the specified identifier.
      operationId: PickListItem_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Pick List Items
      description: Deletes a pick list item with specified identifier.
      operationId: PickListItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Pick List Items
      description: >-
        Updates specified values on a pick list item.<br><br>Updatable Fields
        -<br>- pickQuantity
      operationId: PickListItemUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/pick-lists:
    get:
      tags:
        - Pick Lists
      description: >-
        Gets a list of pick lists with the specified filters.<br><br>Available
        Filters:<br>- name<br>- jobId<br>- statusId<br>- siteId<br><br>
                    Default Jovix Pick List Statuses:<br>- Open = 0<br>- In Process = 1<br>- Closed = 2
      operationId: PickListSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PickLists.Views.PickListResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Pick Lists
      description: Creates a pick list with the provided details.
      operationId: PickListCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: pickListPostBody
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.PickLists.Views.PickListPostView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickLists.Views.PickListResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/pick-lists/{id}':
    get:
      tags:
        - Pick Lists
      description: Gets a pick list with the specified identifier.
      operationId: PickList_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickLists.Views.PickListResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Pick Lists
      description: Deletes a pick list with specified identifier.
      operationId: PickListDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Pick Lists
      description: >-
        Updates specified values on a pick list.<br><br>Updatable Fields -<br>-
        description<br>- job {id}
      operationId: PickListUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickLists.Views.PickListResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/purchase-order-delivery-lines:
    get:
      tags:
        - Purchase Order Delivery Lines
      description: >-
        Gets a list of purchase order delivery lines that meet the specified
        filter criteria.<br><br>Available Filters:<br>- srn<br>-
        catalogItemName<br>- purchaseOrderLineItem Id<br>- barcode<br>-
        rfidTag<br>- purchaseOrderId
      operationId: PurchaseOrderDeliveryLineSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Purchase Order Delivery Lines
      description: Creates a new purchase order delivery line with the fields provided.
      operationId: PurchaseOrderDeliveryLineCreate_PostDeliveryLine
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: deliveryLine
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/purchase-order-delivery-lines/{deliveryLineId}':
    get:
      tags:
        - Purchase Order Delivery Lines
      description: Gets a purchase order delivery line with the specified identifier.
      operationId: PurchaseOrderDeliveryLine_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: deliveryLineId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Purchase Order Delivery Lines
      operationId: PurchaseOrderDeliveryLine_Delete
      consumes: []
      produces: []
      parameters:
        - name: deliveryLineId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Purchase Order Delivery Lines
      description: >-
        Updates specified values on a purchase order delivery
        line<br/><br/>Examples:<br>Update quantity on purchase order delivery
        line:<br/>&nbsp;&nbsp;/purchase-order-delivery-lines/789<br/>&nbsp;&nbsp;request
        body: {<br/>&nbsp;&nbsp;&nbsp;&nbsp;quantity:
        10.75<br/>&nbsp;&nbsp;}<br/><br/>Update RFID tag on material stage for
        purchase order delivery
        line:<br/>&nbsp;&nbsp;/purchase-order-delivery-lines/789<br/>&nbsp;&nbsp;request
        body: {<br/>&nbsp;&nbsp;&nbsp;&nbsp;materialStage:
        {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;rfidTag:
        "1324afed9786"<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;}<br/>
      operationId: PurchaseOrderDeliveryLine_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: deliveryLineId
          in: path
          required: true
          type: integer
          format: int32
        - name: podlPatch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/purchase-order-delivery-lines/{deliveryLineId}/barcode':
    get:
      tags:
        - Purchase Order Delivery Lines
      description: >-
        Gets the barcode for the purchase order delivery line with the specified
        identifier.
      operationId: PurchaseOrderDeliveryLineBarcode_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: deliveryLineId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.PurchaseOrderDeliveryLineBarcodeView]
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/purchase-order-items:
    get:
      tags:
        - Purchase Order Items
      description: >-
        Gets a list of purchase order items that meet the specified filter
        criteria.<br><br>Available Filters:<br>- catalogItemName<br>-
        purchaseOrderId
      operationId: PurchaseOrderItemSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Purchase Order Items
      description: Creates a Purchase order item.
      operationId: PurchaseOrderItemCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: purchaseOrderItemPost
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemPost
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NotFound
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/purchase-order-items/{id}':
    get:
      tags:
        - Purchase Order Items
      description: Gets the purchase order item for the specified id.
      operationId: PurchaseOrderItemGet_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView]
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Purchase Order Items
      description: >-
        Updates specified values on a purchase order line item.<br><br>Updatable
        Fields -<br>- notes<br>- acceptableOverage<br>- acceptableShortage
      operationId: PurchaseOrderItemUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: poliToPatch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/purchase-order-items/{purchaseOrderItemId}':
    delete:
      tags:
        - Purchase Order Items
      operationId: PurchaseOrderLineItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: purchaseOrderItemId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/purchase-orders:
    get:
      tags:
        - Purchase Orders
      description: >-
        Gets a list of purchase orders that meet the specified
        criteria.<br><br>Required Filter(s):<br>- jobId<br>OR<br>- poNumber
      operationId: PurchaseOrderSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Purchase Orders
      description: Creates a new purchase order.
      operationId: PurchaseOrderCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: purchaseOrderPost
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderPost
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/purchase-orders/{id}':
    delete:
      tags:
        - Purchase Orders
      description: Deletes the purchase order with the specified identifier
      operationId: PurchaseOrderDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Purchase Orders
      description: >-
        Updates specified values on a purchase order.<br><br>Updatable Fields
        -<br>- notes<br>- dateFinalized<br>- targetDeliveryDate<br>-
        targetShipDate
      operationId: PurchaseOrderUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/receipt-items:
    get:
      tags:
        - Receipt Items
      description: >-
        Gets a list of receipts with the specified filters.<br><br>Available
        Filters:<br>- receiptId<br>- shipmentItemId<br>- shippingUnitId<br>-
        materialId<br><br>
      operationId: ReceiptItemSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Receipt Items
      description: Creates a receipt item with the provided details.
      operationId: ReceiptItemCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: receiptItemPostBody
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.ReceiptItems.Views.ReceiptItemPost
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemModifiedView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/receipt-items/{id}':
    get:
      tags:
        - Receipt Items
      description: Gets a receipt item with the specified identifier.
      operationId: ReceiptItem_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Receipt Items
      description: Deletes a receipt item with specified identifier.
      operationId: ReceiptItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Receipt Items
      description: >-
        Updates specified values on a receipt item.<br><br>Updatable Fields
        -<br>- ReceivedQuantity<br>- location: latitude, longitude,
        horizontalErrorMeters
      operationId: ReceiptItemUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemModifiedView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/receipts:
    get:
      tags:
        - Receipts
      description: >-
        Gets a list of receipts with the specified filters.<br><br>Available
        Filters:<br>- name<br>- receiptTypeId<br>- purchaseOrderId<br>-
        shipmentId<br><br>
                    Default Jovix Receipt Types:<br>- None - 0<br>- Direct Receipt - 1<br>- Shipment - 2<br>- Purchase Order - 3<br><br>
                    Default Receipt Status Ids:<br>- Open - 0<br>- In Process - 1<br>- Submitted - 2<br>- Completed - 3
      operationId: ReceiptSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Receipts.Views.ReceiptResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Receipts
      description: Creates a receipt with the provided details.
      operationId: ReceiptCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: receiptPostBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Receipts.Views.ReceiptPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Receipts.Views.ReceiptResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/receipts/{id}':
    get:
      tags:
        - Receipts
      description: Gets a receipt with the specified identifier.
      operationId: Receipt_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Receipts.Views.ReceiptResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Receipts
      description: Deletes a receipt with specified identifier.
      operationId: ReceiptDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Receipts
      description: >-
        Updates specified values on a receipt.<br><br>Updatable Fields -<br>-
        Notes<br>- DateStarted
      operationId: ReceiptUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Receipts.Views.ReceiptResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/tag-associations:
    get:
      tags:
        - RFID
      description: >-
        Gets a list of matching Tag Associations. <br><br>Required
        Filter(s):<br>- rfid<br>OR<br>- inventoryItemId
      operationId: TagAssociation_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: f
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.TagAssociations.TagAssociation[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - RFID
      description: >-
        Creates an RFID tag association.<br> Expected body: { inventoryItemId OR
        shippingUnitId, rfid }
      operationId: TagAssociationCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: newTagAssociation
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.TagAssociations.NewTagAssociation
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.TagAssociations.Views.TagAssociationView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NotFound
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/schedule-activities:
    get:
      tags:
        - Schedule Activities
      description: >-
        Gets a list of schedule activities that meet the specified filter
        criteria.<br><br>Availble Filters:<br>- externalProjectName<br>-
        name<br>- workBreakdownStructureName
      operationId: ScheduleActivitySearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Schedule Activities
      description: Creates a new schedule activity with the fields provided.
      operationId: ScheduleActivityCreate_PostActivityView
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: scheduleActivity
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityPostResponse]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/schedule-activities/{activityId}':
    get:
      tags:
        - Schedule Activities
      description: Gets a schedule activity with the specified identifier.
      operationId: ScheduleActivity_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: activityId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Schedule Activities
      description: Deletes a scheduled activity with the specified identifier.
      operationId: ScheduleActivity_Delete
      consumes: []
      produces: []
      parameters:
        - name: activityId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/schedule-activities/{scheduleActivityId}':
    patch:
      tags:
        - Schedule Activities
      description: >-
        Updates specified values on a schedule activity<br/><br/>Patchable
        Fields:<br/><br/>name<br/>job.Id<br/>externalProjectId<br/>externalProjectName<br/>workBreakdownStructureId<br/>workBreakdownStructureName<br/>startDate<br/>finishDate<br/>isActualStartDate<br/>isActualFinishDate<br/>totalFloat<br/>freeFloat<br/>activityType<br/>activityCode<br/><br/>Examples:<br/><br/>Update
        Name of a Schedule
        Activity:<br/>&nbsp;&nbsp;/schedule-activities/1<br/>&nbsp;&nbsp;request
        body: {<br/>&nbsp;&nbsp;&nbsp;&nbsp;name: "New
        Name"<br/>&nbsp;&nbsp;}<br/><br/>Update Job ID and Name of a Schedule
        Activity<br/>&nbsp;&nbsp;/schedule-activities/1<br/>&nbsp;&nbsp;request
        body: {<br/>&nbsp;&nbsp;&nbsp;&nbsp;name: "New
        Name"<br/>&nbsp;&nbsp;&nbsp;&nbsp;job:
        {<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;id:
        1<br/>&nbsp;&nbsp;&nbsp;&nbsp;}<br/>&nbsp;&nbsp;}<br/>
      operationId: ScheduleActivityUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: scheduleActivityId
          in: path
          required: true
          type: integer
          format: int32
        - name: scheduleActivityPatch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/shipment-items:
    get:
      tags:
        - Shipment Items
      description: >-
        Gets a list of shipment items that meet the specified filter
        criteria.<br><br>Available Filters:<br>- shipmentid<br>-
        shippingunitid<br>- purchaseorderitemid<br>- purchaseorderdeliverylineid
      operationId: ShipmentItemSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
        - name: showTotalCount
          in: query
          required: false
          type: boolean
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Shipment Items
      description: Creates a new shipment item with the fields provided.
      operationId: ShipmentItemCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: shipmentItem
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/shipment-items/{id}':
    get:
      tags:
        - Shipment Items
      description: Gets a shipment item with the specified identifier.
      operationId: ShipmentItem_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Shipment Items
      description: Deletes a shipment item with specified parameters.
      operationId: ShipmentItemDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: NotFound
        '409':
          description: Conflict
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Shipment Items
      description: >-
        Updates specified values on a shipment item.<br><br>Updatable Fields
        -<br>- quantityExpected<br>- materialStage
      operationId: ShipmentItemUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/shipment-release-notices:
    get:
      tags:
        - Shipment Release Notices
      description: >-
        Gets a list of shipment release notices that meet the specified filter
        criteria.<br><br>Available Filter(s):<br- poNumber
      operationId: ShipmentReleaseNoticeSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShipmentReleaseNotices.Views.ShipmentReleaseNoticeView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/shipments:
    get:
      tags:
        - Shipments
      description: >-
        Gets a list of shipments that meet the specified filter
        criteria.<br><br>Available Filters:<br>- name<br>- jobid<br>-
        puchaseorderid<br>- supplierid<br>- tositeid<br>- istransfer<br>-
        statusid
      operationId: ShipmentSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Shipments.Views.ShipmentView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Shipments
      description: Creates a shipment.
      operationId: ShipmentCreate_PostShipmentAsync
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: shipmentPost
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Shipments.ShipmentPost'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Shipments.Views.ShipmentView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/shipments/{id}':
    delete:
      tags:
        - Shipments
      description: Deletes a shipment with specified identifier.
      operationId: ShipmentDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Shipments
      description: >-
        Updates specified values on a shipment.<br><br>Updatable Fields -<br>-
        purchaseOrder<br>- supplier<br>- fromSite<br>- isTransfer<br>-
        billOfLading<br>- vehicleNumber<br>- grossWeight<br>-
        packingListNumber<br>- dateShipped<br>- dateArrived
      operationId: ShipmentUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Shipments.Views.ShipmentView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/shipments/{shipmentId}':
    get:
      tags:
        - Shipments
      description: Gets a shipment with the specified identifier.
      operationId: Shipment_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: shipmentId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Shipments.Views.ShipmentView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/shipping-unit-types:
    get:
      tags:
        - Shipping Unit Types
      description: >-
        Gets a list of matching shipping unit types.<br><br>Filter(s):<br>-
        isActive
      operationId: ShippingUnitTypeSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnitTypes.Views.ShippingUnitTypeResponseView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/shipping-units:
    get:
      tags:
        - Shipping Units
      description: >-
        Gets a list of shipping units that meet the specified filter
        criteria.<br><br>Available Filters:<br>- name<br>- barcode<br>-
        rfidTag<br>- purchaseOrderId
      operationId: ShippingUnitSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Shipping Units
      description: Creates a new shipping unit with the fields provided.
      operationId: ShippingUnitCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: shippingUnit
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/shipping-units/{shippingUnitId}':
    get:
      tags:
        - Shipping Units
      description: Gets a shipping unit that matches the given id.
      operationId: ShippingUnitGet_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: shippingUnitId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/sites:
    get:
      tags:
        - Sites
      description: >-
        Gets a list of sites that meet the specified filter
        criteria.<br><br>Available Filter(s):<br>- name
      operationId: SiteSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Sites.Views.SiteResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Sites
      description: >-
        Creates a site with the provided details. <br><br>Required Fields: <br>-
        Name<br>- Project
      operationId: SiteCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: site
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Sites.Views.SiteResourceView'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Sites.Views.SiteResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/sites/{id}':
    delete:
      tags:
        - Sites
      description: Deletes a site with specified identifier.
      operationId: SiteDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Sites
      description: >-
        Updates specified values on a site.<br><br>Updatable Fields -<br>-
        Name<br>- isToLocation<br>- isFromLocation<br>-
        isWorkOrDeliverySite<br>- Address: All fields
      operationId: SiteUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Sites.Views.SiteResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/sites/{siteId}':
    get:
      tags:
        - Sites
      description: Gets a site with the specified identifier.
      operationId: Site_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: siteId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Sites.Views.SiteResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/statuses:
    get:
      tags:
        - Statuses
      description: >-
        Gets a list of statuses that meet the specified filter
        criteria.<br><br>Available Filters:<br>- name<br>- isActive (default:
        true)<br>
      operationId: StatusSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Statuses.Repositories.StatusResourceView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Statuses
      description: Creates a status with the provided details
      operationId: StatusCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: statusView
          in: body
          required: true
          schema:
            $ref: >-
              #/definitions/Jovix.Application.V1.Statuses.Repositories.StatusResourceView
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Statuses.Repositories.StatusResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/statuses/{id}':
    delete:
      tags:
        - Statuses
      description: Deletes a status with specified identifier.
      operationId: StatusDelete_Delete
      consumes: []
      produces: []
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    patch:
      tags:
        - Statuses
      description: Updates specified values on a status.
      operationId: StatusUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: statusToPatch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Statuses.Repositories.StatusResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/statuses/{statusId}':
    get:
      tags:
        - Statuses
      description: Gets a status with the specified identifier.
      operationId: Status_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: statusId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Statuses.Repositories.StatusResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/units-of-measure/{unitOfMeasureId}':
    get:
      tags:
        - Units Of Measure
      description: Gets a unit of measure with the specified identifier.
      operationId: UnitOfMeasure_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: unitOfMeasureId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.UnitsOfMeasure.Views.UnitOfMeasureView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/users:
    get:
      tags:
        - Users
      description: >-
        Gets a list of users with the specified filters.<br><br>Available
        Filters:<br>- name<br>- firstName<br>- lastName<br>- company<br>-
        isSuperUser<br>- isActive<br>- isUserManager<br>- isLocked<br>-
        isMobileUser<br>- isSupplierUser
      operationId: UserSearch_GetList
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Users.UserView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    post:
      tags:
        - Users
      description: Creates a user with the provided details.
      operationId: UserCreate_Post
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: userView
          in: body
          required: true
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Users.Views.UserResourceView'
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Users.Views.UserResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/users/{id}':
    patch:
      tags:
        - Users
      description: >-
        Updates specified values on a user.<br><br>Updatable Fields -<br>-
        firstName<br>- middleName<br>- lastName<br>- internalId<br>-
        company<br>- isSupplierUser<br>- isActive<br>- isLocked<br>-
        isMobileUser<br>- phone<br>- email
      operationId: UserUpdate_Patch
      consumes:
        - application/json
        - text/json
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
        - name: patch
          in: body
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Users.Views.UserResourceView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/users/{id}/permissions':
    get:
      tags:
        - Users
        - Permissions
      description: >-
        Gets the list of permissions for the user with the specified
        identifier.<br><br>Example:<br>/users/183/permissions
      operationId: Permissions_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Users.Permissions.Permissions'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/users/{userId}':
    get:
      tags:
        - Users
      description: Gets a user with the specified identifier.
      operationId: User_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Users.UserView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
    delete:
      tags:
        - Users
      description: Deletes a user with specified identifier.
      operationId: User_Delete
      consumes: []
      produces: []
      parameters:
        - name: userId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '422':
          description: '422'
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/version:
    get:
      tags:
        - Version
      description: >-
        Gets version information for the available Jovix installation
        package.<br><br>Examples:<br>Get Version Number:<br>/version
      operationId: Version_Get
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: string
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/version/package:
    get:
      tags:
        - Version
      description: >-
        Gets the available Jovix installation package.<br>Examples:<br>Get Jovix
        Package:<br>/version/package
      operationId: Version_GetPackage
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/versions:
    get:
      tags:
        - Version
      operationId: Versions_Get
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Jovix.Application.V1.Version.VersionInfo'
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/versions/offlinetablet/download:
    get:
      tags:
        - Version
      operationId: Versions_GetOfflineTabletInstaller
      consumes: []
      produces:
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/work-packages/{id}':
    get:
      tags:
        - Work Packages
      description: >-
        Gets a work package with the specified identifier.<br><br>Default Jovix
        Work Package Statuses:<br>- Initial = 0<br>- Partially Reserved = 1<br>-
        Reserved = 2<br>- Requesting = 3<br>- Requested = 4<br>- Picking =
        5<br>- Picked = 6<br>- Issued = 7<br>
      operationId: WorkPackage_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.WorkPackages.Views.WorkPackageView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/yards:
    get:
      tags:
        - Yards
      description: >-
        Gets a list of yards that meet the specified filter
        criteria.<br><br>Available Filters:<br>- name<br>- jobId<br>-
        siteId<br>- isActive
      operationId: YardSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Yards.Views.YardResponseView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/yards/{id}/image':
    get:
      tags:
        - Yards
        - Image
      description: >-
        Gets the image for the yard with the specified
        identifier.<br><br>Examples: <br>/yards/123/image
      operationId: YardImage_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[System.String]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/yards/{yardId}':
    get:
      tags:
        - Yards
      description: >-
        Gets a yard with the specified
        identifier.<br><br>Examples:<br>/yards/123
      operationId: Yard_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: yardId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Yards.Views.YardResponseView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  /api/v1/zones:
    get:
      tags:
        - Zones
      description: >-
        Gets a list of zones that meet the specified filter
        criteria.<br><br>Availble Filters:<br>- name<br>- yardId<br>.
      operationId: ZoneSearch_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: filter
          in: query
          required: false
          type: string
        - name: page
          in: query
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Zones.Views.ZoneResponseView[]]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
  '/api/v1/zones/{zoneId}':
    get:
      tags:
        - Zones
      description: >-
        Gets a zone with specified identifier.<br><br>Examples: <br>Get Zone by
        identifier:<br>/zones/133
      operationId: Zone_Get
      consumes: []
      produces:
        - application/json
        - text/json
      parameters:
        - name: zoneId
          in: path
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: >-
              #/definitions/Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Zones.Views.ZoneResponseView]
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '500':
          description: Unexpected Error
definitions:
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.CatalogItems.Views.CatalogItemView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItemView'
  Jovix.Application.V1.CatalogItems.Views.CatalogItemView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      centerOfGravity:
        type: string
      description:
        type: string
      notes:
        type: string
      size:
        type: string
      shortDescription:
        type: string
      specializedTrailer:
        type: boolean
      tagNumber:
        type: string
      volume:
        type: string
      length:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementView'
      width:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementView'
      height:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementView'
      weight:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementView'
      discipline:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      materialType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      unitOfMeasure:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      customField_1:
        type: string
      customField_2:
        type: string
      customField_3:
        type: string
      customField_4:
        type: string
      customField_5:
        type: string
      customField_6:
        type: string
      customField_7:
        type: string
      customField_8:
        type: string
      customField_9:
        type: string
      customField_10:
        type: string
      customField_11:
        type: string
      customField_12:
        type: string
      customField_13:
        type: string
      customField_14:
        type: string
      customField_15:
        type: string
      customField_16:
        type: string
      customField_17:
        type: string
      customField_18:
        type: string
      customField_19:
        type: string
      customField_20:
        type: string
      customField_21:
        type: string
      customField_22:
        type: string
      customField_23:
        type: string
      customField_24:
        type: string
      customField_25:
        type: string
      customField_26:
        type: string
      customField_27:
        type: string
      customField_28:
        type: string
      customField_29:
        type: string
      customField_30:
        type: string
  Jovix.Application.V1.UnitsOfMeasure.MeasurementView:
    type: object
    properties:
      value:
        format: double
        type: number
      unitOfMeasure:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
  Jovix.Application.V1.GenericViews.IdAndNameView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  Jovix.Application.V1.CatalogItems.CatalogItemPost:
    required:
      - name
      - project
    type: object
    properties:
      name:
        maxLength: 150
        minLength: 0
        pattern: '[ -~]+'
        type: string
      centerOfGravity:
        maxLength: 150
        minLength: 0
        type: string
      description:
        maxLength: 1000
        minLength: 0
        type: string
      notes:
        maxLength: 1000
        minLength: 0
        type: string
      shortDescription:
        maxLength: 150
        minLength: 0
        type: string
      size:
        maxLength: 150
        minLength: 0
        type: string
      tagNumber:
        maxLength: 150
        minLength: 0
        type: string
      volume:
        maxLength: 150
        minLength: 0
        type: string
      specializedTrailer:
        type: boolean
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      materialType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      unitOfMeasure:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      discipline:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      length:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementPost'
      width:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementPost'
      height:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementPost'
      weight:
        $ref: '#/definitions/Jovix.Application.V1.UnitsOfMeasure.MeasurementPost'
      customField_1:
        type: object
      customField_2:
        type: object
      customField_3:
        type: object
      customField_4:
        type: object
      customField_5:
        type: object
      customField_6:
        type: object
      customField_7:
        type: object
      customField_8:
        type: object
      customField_9:
        type: object
      customField_10:
        type: object
      customField_11:
        type: object
      customField_12:
        type: object
      customField_13:
        type: object
      customField_14:
        type: object
      customField_15:
        type: object
      customField_16:
        type: object
      customField_17:
        type: object
      customField_18:
        type: object
      customField_19:
        type: object
      customField_20:
        type: object
      customField_21:
        type: object
      customField_22:
        type: object
      customField_23:
        type: object
      customField_24:
        type: object
      customField_25:
        type: object
      customField_26:
        type: object
      customField_27:
        type: object
      customField_28:
        type: object
      customField_29:
        type: object
      customField_30:
        type: object
  Jovix.Application.V1.GenericViews.IdPost:
    required:
      - id
    type: object
    properties:
      id:
        format: int32
        type: integer
  Jovix.Application.V1.UnitsOfMeasure.MeasurementPost:
    required:
      - value
      - unitOfMeasure
    type: object
    properties:
      value:
        format: double
        minimum: 0
        type: number
      unitOfMeasure:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.CatalogItems.Views.CatalogItemView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItemView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.Response.PageLinks:
    type: object
    properties:
      first:
        type: string
      last:
        type: string
      next:
        type: string
      previous:
        type: string
  'Jovix.Application.V1.ModifiedRecords[Jovix.Application.V1.CatalogItems.Views.CatalogItem]':
    type: object
    properties:
      pagingToken:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItem'
  Jovix.Application.V1.CatalogItems.Views.CatalogItem:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      shortDescription:
        type: string
      description:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.Project'
      materialType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      discipline:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.Discipline'
      unitOfMeasure:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.UnitOfMeasure'
      lengthUnitOfMeasureID:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      widthUnitOfMeasureID:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      heightUnitOfMeasureID:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      weightUnitOfMeasureID:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      volume:
        type: string
      centerOfGravity:
        type: string
      asmeClassification:
        type: string
      htsClassification:
        type: string
      htsDescription:
        type: string
      hazardousMaterialsClassification:
        type: string
      hazardousMaterialsDescription:
        type: string
      storageRequirement:
        type: string
      safetyClassification:
        type: string
      handlingInstructions:
        type: string
      isAssetNumberRequired:
        type: boolean
      isSerialNumberRequired:
        type: boolean
      isHeatNumberRequired:
        type: boolean
      isLotNumberRequired:
        type: boolean
      isShelfLifeRequired:
        type: boolean
      isPMRequired:
        type: boolean
      notes:
        type: string
      properShippingName:
        type: string
      isLimitedQuantity:
        type: boolean
      isMSDSRequired:
        type: boolean
      size:
        type: string
      procurementPackage:
        type: string
      specification:
        type: string
      isManualHot:
        type: boolean
      manualHotDate:
        format: date-time
        type: string
      manualUnHotDate:
        format: date-time
        type: string
      isAssembly:
        type: boolean
      hasAccessories:
        type: boolean
      accessoriesCount:
        format: int32
        type: integer
      subComponentCount:
        format: int32
        type: integer
      totalRequiredMaterialCodeCount:
        format: int32
        type: integer
      engineeredQuantity:
        format: double
        type: number
      tagNumber:
        type: string
      isSpecializedTrailerRequired:
        type: boolean
      length:
        format: double
        type: number
      lengthNormalized:
        format: double
        type: number
      width:
        format: double
        type: number
      widthNormalized:
        format: double
        type: number
      height:
        format: double
        type: number
      heightNormalized:
        format: double
        type: number
      weight:
        format: double
        type: number
      weightNormalized:
        format: double
        type: number
      loadMethod:
        type: string
      unloadMethod:
        type: string
      cF_1:
        type: string
      cF_2:
        type: string
      cF_3:
        type: string
      cF_4:
        type: string
      cF_5:
        type: string
      cF_6:
        type: string
      cF_7:
        type: string
      cF_8:
        type: string
      cF_9:
        type: string
      cF_10:
        type: string
      cF_11:
        type: string
      cF_12:
        type: string
      cF_13:
        type: string
      cF_14:
        type: string
      cF_15:
        type: string
      cF_16:
        type: string
      cF_17:
        type: string
      cF_18:
        type: string
      cF_19:
        type: string
      cF_20:
        type: string
      cF_21:
        type: string
      cF_22:
        type: string
      cF_23:
        type: string
      cF_24:
        type: string
      cF_25:
        type: string
      cF_26:
        type: string
      cF_27:
        type: string
      cF_28:
        type: string
      cF_29:
        type: string
      cF_30:
        type: string
      cF_Lookup1:
        type: string
      cF_Lookup2:
        type: string
      cF_Lookup3:
        type: string
      cF_Lookup4:
        type: string
      cF_Lookup5:
        type: string
  Jovix.Application.V1.CatalogItems.Views.Project:
    type: object
    properties:
      id:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
  Jovix.Application.V1.GenericViews.IdView:
    type: object
    properties:
      id:
        format: int32
        type: integer
  Jovix.Application.V1.CatalogItems.Views.Discipline:
    type: object
    properties:
      id:
        format: int32
        type: integer
  Jovix.Application.V1.CatalogItems.Views.UnitOfMeasure:
    type: object
    properties:
      id:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Facilities.Views.FacilityResourceView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.Facilities.Views.FacilityResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Facilities.Views.FacilityResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      site:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Facilities.Views.FacilityResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.Facilities.Views.FacilityResourceView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Facilities.Views.FacilityResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.Facilities.Views.FacilityResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.MaterialFlags.MaterialFlag[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.MaterialFlags.MaterialFlag'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.MaterialFlags.MaterialFlag:
    type: object
    properties:
      id:
        format: int32
        type: integer
      flagCode:
        type: string
      abbreviation:
        type: string
      isMobileFlag:
        type: boolean
      isReceiptFlag:
        type: boolean
      isShippingUnitFlag:
        type: boolean
      hasTextField:
        type: boolean
      isActive:
        type: boolean
      isOsdFlag:
        type: boolean
      isMaterialFlag:
        type: boolean
      columnNumber:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Attachments.Attachment[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Attachments.Attachment'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Attachments.Attachment:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      dateAttached:
        format: date-time
        type: string
      fileNameWithExtension:
        type: string
        readOnly: true
      file:
        format: byte
        type: string
      extension:
        type: string
  Jovix.Application.V1.Attachments.NewAttachment:
    type: object
    properties:
      fileName:
        type: string
      fileBytes:
        format: byte
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Locations.InventoryLocation]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Locations.InventoryLocation'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Locations.InventoryLocation:
    type: object
    properties:
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      dateLocated:
        type: string
      namedLocation:
        $ref: '#/definitions/Jovix.Application.V1.Locations.NamedLocation'
      site:
        $ref: '#/definitions/Jovix.Application.V1.Sites.Views.SiteView'
      yard:
        $ref: '#/definitions/Jovix.Application.V1.Yards.Views.Yard'
      horizontalErrorMeters:
        format: double
        type: number
      zoneIds:
        type: array
        items:
          format: int32
          type: integer
  Jovix.Application.V1.Locations.NamedLocation:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      facility:
        $ref: '#/definitions/Jovix.Application.V1.Facilities.Views.FacilityView'
  Jovix.Application.V1.Sites.Views.SiteView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  Jovix.Application.V1.Yards.Views.Yard:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      positionTop:
        format: double
        type: number
      positionLeft:
        format: double
        type: number
      positionRight:
        format: double
        type: number
      positionBottom:
        format: double
        type: number
  Jovix.Application.V1.Facilities.Views.FacilityView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      site:
        $ref: '#/definitions/Jovix.Application.V1.Sites.Views.SiteResourceView'
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
  Jovix.Application.V1.Sites.Views.SiteResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      address:
        $ref: '#/definitions/Jovix.Application.V1.Addresses.AddressResourceView'
      isToLocation:
        type: boolean
      isFromLocation:
        type: boolean
      isWorkOrDeliverySite:
        type: boolean
  Jovix.Application.V1.Addresses.AddressResourceView:
    type: object
    properties:
      description:
        type: string
      contact:
        type: string
      phone1:
        type: string
      phone2:
        type: string
      street1:
        type: string
      street2:
        type: string
      city:
        type: string
      state:
        type: string
      zip:
        type: string
      country:
        type: string
      email:
        type: string
  'Jovix.Application.V1.ModifiedRecords[Jovix.Application.V1.Inventory.InventoryItem]':
    type: object
    properties:
      pagingToken:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItem'
  Jovix.Application.V1.Inventory.InventoryItem:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      inventoryItemKey:
        type: string
      jobInfoId:
        format: int32
        type: integer
      instanceNumber:
        format: int32
        type: integer
      inventoryTypeNumber:
        format: int32
        type: integer
      itemTypeNumber:
        format: int32
        type: integer
      barcode:
        type: string
      catalogId:
        format: int32
        type: integer
      statusId:
        format: int32
        type: integer
      quantity:
        format: double
        type: number
      namedLocationId:
        format: int32
        type: integer
      notes:
        type: string
      serialNumber:
        type: string
      assetNumber:
        type: string
      heatNumber:
        type: string
      lotNumber:
        type: string
      tagNumber:
        type: string
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      horizontalErrorMeters:
        format: double
        type: number
      dateLocated:
        format: date-time
        type: string
      cF_1:
        type: string
      cF_2:
        type: string
      cF_3:
        type: string
      cF_4:
        type: string
      cF_5:
        type: string
      cF_6:
        type: string
      cF_7:
        type: string
      cF_8:
        type: string
      cF_9:
        type: string
      cF_10:
        type: string
      cF_11:
        type: string
      cF_12:
        type: string
      cF_13:
        type: string
      cF_14:
        type: string
      cF_15:
        type: string
      cF_16:
        type: string
      cF_17:
        type: string
      cF_18:
        type: string
      cF_19:
        type: string
      cF_20:
        type: string
      cF_21:
        type: string
      cF_22:
        type: string
      cF_23:
        type: string
      cF_24:
        type: string
      cF_25:
        type: string
      cF_26:
        type: string
      cF_27:
        type: string
      cF_28:
        type: string
      cF_29:
        type: string
      cF_30:
        type: string
      cF_Lookup1:
        type: string
      cF_Lookup2:
        type: string
      cF_Lookup3:
        type: string
      cF_Lookup4:
        type: string
      cF_Lookup5:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobView'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItem'
      status:
        $ref: '#/definitions/Jovix.Application.V1.Statuses.InventoryStatus'
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.InventoryLocation'
      flags:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItemFlag'
  Jovix.Application.V1.Jobs.Views.JobView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  Jovix.Application.V1.Statuses.InventoryStatus:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  Jovix.Application.V1.Inventory.InventoryItemFlag:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Issues.Views.IssueView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Issues.Views.IssueView'
  Jovix.Application.V1.Issues.Views.IssueView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      dateIssued:
        format: date-time
        type: string
      issuedToEmployee:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      issuedByEmployee:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      notes:
        type: string
      description:
        type: string
  Jovix.Application.V1.Issues.Views.IssuePost:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      issuedToEmployee:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      issuedByEmployee:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      notes:
        type: string
      dateIssued:
        format: date-time
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Issues.Views.IssueView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Issues.Views.IssueView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.IssueItems.Views.IssueItemView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.IssueItems.Views.IssueItemView'
  Jovix.Application.V1.IssueItems.Views.IssueItemView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      quantityIssued:
        format: double
        type: number
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
      materialIssue:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      pickListPickedItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  Jovix.Application.V1.IssueItems.Views.IssueItemPost:
    type: object
    properties:
      quantityIssued:
        format: double
        type: number
      materialIssue:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      pickListPickedItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.IssueItems.Views.IssueItemView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.IssueItems.Views.IssueItemView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Jobs.Views.JobResourceView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobResourceView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Jobs.Views.JobResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
      abbreviation:
        type: string
      isActive:
        type: boolean
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Jobs.Views.JobResourceView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobResourceView'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Jobs.Views.JobResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobResourceView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Materials.Views.MaterialView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Materials.Views.MaterialView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Materials.Views.MaterialView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      quantity:
        format: double
        type: number
      inventoryType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.Views.LocationView'
      area:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      system:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      building:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      barcode:
        type: string
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      serialNumber:
        type: string
      tagNumber:
        type: string
      assetNumber:
        type: string
      heatNumber:
        type: string
      lotNumber:
        type: string
      shelfLifeExpiration:
        format: date-time
        type: string
      preventativeMaintenanceDueDate:
        format: date-time
        type: string
      notes:
        type: string
      flags:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItemFlag'
      customField_1:
        type: string
      customField_2:
        type: string
      customField_3:
        type: string
      customField_4:
        type: string
      customField_5:
        type: string
      customField_6:
        type: string
      customField_7:
        type: string
      customField_8:
        type: string
      customField_9:
        type: string
      customField_10:
        type: string
      customField_11:
        type: string
      customField_12:
        type: string
      customField_13:
        type: string
      customField_14:
        type: string
      customField_15:
        type: string
      customField_16:
        type: string
      customField_17:
        type: string
      customField_18:
        type: string
      customField_19:
        type: string
      customField_20:
        type: string
      customField_21:
        type: string
      customField_22:
        type: string
      customField_23:
        type: string
      customField_24:
        type: string
      customField_25:
        type: string
      customField_26:
        type: string
      customField_27:
        type: string
      customField_28:
        type: string
      customField_29:
        type: string
      customField_30:
        type: string
  Jovix.Application.V1.Locations.Views.LocationView:
    type: object
    properties:
      latitude:
        format: double
        type: number
      longitude:
        format: double
        type: number
      dateLocated:
        format: date-time
        type: string
      horizontalErrorMeters:
        format: double
        type: number
      namedLocation:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      yard:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      zones:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  Jovix.Application.V1.Materials.MaterialPost:
    required:
      - job
      - catalogItem
      - quantity
    type: object
    properties:
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      quantity:
        format: double
        minimum: 0
        type: number
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      inventoryType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.LocationPost'
      area:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      system:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      building:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      sequenceNumber:
        format: int32
        type: integer
      serialNumber:
        type: string
      assetNumber:
        type: string
      heatNumber:
        type: string
      lotNumber:
        type: string
      notes:
        type: string
      barcode:
        type: string
      shelfLifeExpiration:
        format: date-time
        type: string
      flags:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.MaterialFlags.Views.MaterialFlagCompactView
      customField_1:
        type: object
      customField_2:
        type: object
      customField_3:
        type: object
      customField_4:
        type: object
      customField_5:
        type: object
      customField_6:
        type: object
      customField_7:
        type: object
      customField_8:
        type: object
      customField_9:
        type: object
      customField_10:
        type: object
      customField_11:
        type: object
      customField_12:
        type: object
      customField_13:
        type: object
      customField_14:
        type: object
      customField_15:
        type: object
      customField_16:
        type: object
      customField_17:
        type: object
      customField_18:
        type: object
      customField_19:
        type: object
      customField_20:
        type: object
      customField_21:
        type: object
      customField_22:
        type: object
      customField_23:
        type: object
      customField_24:
        type: object
      customField_25:
        type: object
      customField_26:
        type: object
      customField_27:
        type: object
      customField_28:
        type: object
      customField_29:
        type: object
      customField_30:
        type: object
  Jovix.Application.V1.Locations.LocationPost:
    type: object
    properties:
      namedLocation:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
  Jovix.Application.V1.MaterialFlags.Views.MaterialFlagCompactView:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Materials.Views.MaterialView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Materials.Views.MaterialView'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Materials.Views.MaterialView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Materials.Views.MaterialView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.MaterialFlags.MaterialFlagLookupOption[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.MaterialFlags.MaterialFlagLookupOption
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.MaterialFlags.MaterialFlagLookupOption:
    type: object
    properties:
      name:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Inventory.Views.MaterialView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Inventory.Views.MaterialView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Inventory.Views.MaterialView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.Projects.ProjectView'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItemView'
      job:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.Statuses.Views.StatusView'
      quantity:
        format: double
        type: number
      inventoryType:
        $ref: >-
          #/definitions/Jovix.Application.V1.InventoryType.Views.InventoryTypeView
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.Views.LocationView'
      area:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      system:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      building:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      barcode:
        type: string
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.Suppliers.SupplierView'
      serialNumber:
        type: string
      tagNumber:
        type: string
      assetNumber:
        type: string
      heatNumber:
        type: string
      lotNumber:
        type: string
      shelfLifeExpiration:
        format: date-time
        type: string
      preventativeMaintenanceDueDate:
        format: date-time
        type: string
      notes:
        type: string
      flags:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItemFlag'
      cF_1:
        type: string
      cF_2:
        type: string
      cF_3:
        type: string
      cF_4:
        type: string
      cF_5:
        type: string
      cF_6:
        type: string
      cF_7:
        type: string
      cF_8:
        type: string
      cF_9:
        type: string
      cF_10:
        type: string
      cF_11:
        type: string
      cF_12:
        type: string
      cF_13:
        type: string
      cF_14:
        type: string
      cF_15:
        type: string
      cF_16:
        type: string
      cF_17:
        type: string
      cF_18:
        type: string
      cF_19:
        type: string
      cF_20:
        type: string
      cF_21:
        type: string
      cF_22:
        type: string
      cF_23:
        type: string
      cF_24:
        type: string
      cF_25:
        type: string
      cF_26:
        type: string
      cF_27:
        type: string
      cF_28:
        type: string
      cF_29:
        type: string
      cF_30:
        type: string
      cF_Lookup1:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      cF_Lookup2:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      cF_Lookup3:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      cF_Lookup4:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
      cF_Lookup5:
        format: uuid
        type: string
        example: 00000000-0000-0000-0000-000000000000
  Jovix.Application.V1.Projects.ProjectView:
    type: object
    properties:
      id:
        format: int32
        type: integer
  Jovix.Application.V1.Statuses.Views.StatusView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  Jovix.Application.V1.InventoryType.Views.InventoryTypeView:
    type: object
    properties:
      id:
        format: int32
        type: integer
  Jovix.Application.V1.Suppliers.SupplierView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Inventory.InventoryItem]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItem'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Barcodes.BarcodeDescriptor]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Barcodes.BarcodeDescriptor'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Barcodes.BarcodeDescriptor:
    type: object
    properties:
      entityType:
        type: string
      barcodeVersion:
        format: int32
        type: integer
      barcodeValue:
        type: string
  Jovix.Application.V1.Locations.Views.NamedLocationResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      facility:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      barcode:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Locations.Views.NamedLocationResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.Locations.Views.NamedLocationResourceView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Locations.NamedLocation[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Locations.NamedLocation'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Locations.NamedLocation]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Locations.NamedLocation'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Users.Permissions.Permissions:
    type: object
    properties:
      materialsPermissions:
        $ref: >-
          #/definitions/Jovix.Application.V1.Users.Permissions.MaterialsPermissions
  Jovix.Application.V1.Users.Permissions.MaterialsPermissions:
    type: object
    properties:
      addAttachments:
        type: boolean
        readOnly: true
      editStatus:
        type: boolean
        readOnly: true
      modify:
        type: boolean
        readOnly: true
      view:
        type: boolean
        readOnly: true
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickLists.Views.PickListResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PickLists.Views.PickListResourceView
  Jovix.Application.V1.PickLists.Views.PickListResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      site:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      datePickStarted:
        format: date-time
        type: string
      datePickRequested:
        format: date-time
        type: string
      datePickFinished:
        format: date-time
        type: string
  Jovix.Application.V1.PickLists.Views.PickListPostView:
    type: object
    properties:
      name:
        type: string
      description:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      site:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PickLists.Views.PickListResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.PickLists.Views.PickListResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PickListItems.Views.PickListItemResourceView
  Jovix.Application.V1.PickListItems.Views.PickListItemResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
      pickQuantity:
        format: double
        type: number
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      pickList:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
  Jovix.Application.V1.PickListItems.Views.PickListItemPost:
    type: object
    properties:
      pickList:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      pickQuantity:
        format: double
        type: number
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PickListItems.Views.PickListItemResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.PickListItems.Views.PickListItemResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderPost:
    required:
      - name
      - job
      - supplier
    type: object
    properties:
      name:
        maxLength: 100
        minLength: 0
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      dateSubmitted:
        format: date-time
        type: string
      dateFinalized:
        format: date-time
        type: string
      targetDeliveryDate:
        format: date-time
        type: string
      targetShipDate:
        format: date-time
        type: string
      notes:
        maxLength: 1000
        minLength: 0
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView
  Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      dateSubmitted:
        format: date-time
        type: string
      dateFinalized:
        format: date-time
        type: string
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      targetDeliveryDate:
        format: date-time
        type: string
      targetShipDate:
        format: date-time
        type: string
      notes:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.PurchaseOrders.Views.PurchaseOrderView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      quantity:
        format: double
        type: number
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
      srn:
        type: string
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.CatalogItems.Views.CatalogItemView'
      purchaseOrderLineItem:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView
      materialStage:
        $ref: >-
          #/definitions/Jovix.Application.V1.MaterialStage.Views.MaterialStageView
  Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      acceptableOverage:
        format: double
        type: number
      acceptableShortage:
        format: double
        type: number
  Jovix.Application.V1.MaterialStage.Views.MaterialStageView:
    type: object
    properties:
      barcode:
        type: string
      rfidTag:
        type: string
      inventoryTypeId:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.PurchaseOrderDeliveryLineBarcodeView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrderDeliveryLines.PurchaseOrderDeliveryLineBarcodeView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.PurchaseOrderDeliveryLines.PurchaseOrderDeliveryLineBarcodeView:
    type: object
    properties:
      value:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.PurchaseOrderDeliveryLines.Views.PurchaseOrderDeliveryLineView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemPost:
    required:
      - purchaseOrder
      - catalogItem
    type: object
    properties:
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      acceptableOverage:
        format: double
        type: number
      acceptableShortage:
        format: double
        type: number
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.PurchaseOrderItems.Views.PurchaseOrderItemView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Receipts.Views.ReceiptResourceView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Receipts.Views.ReceiptResourceView'
  Jovix.Application.V1.Receipts.Views.ReceiptResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      receiptType:
        format: int32
        type: integer
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shipment:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      dateStarted:
        format: date-time
        type: string
      dateComplete:
        format: date-time
        type: string
      osdItemCount:
        format: int32
        type: integer
      notes:
        type: string
  Jovix.Application.V1.Receipts.Views.ReceiptPost:
    required:
      - name
      - shipment
    type: object
    properties:
      name:
        type: string
      shipment:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      dateStarted:
        format: date-time
        type: string
      notes:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Receipts.Views.ReceiptResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.Receipts.Views.ReceiptResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView
  Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      receipt:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      lineNumber:
        format: int32
        type: integer
      shipmentItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shippingUnit:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      receivedQuantity:
        format: double
        type: number
      flags:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.MaterialFlags.Views.MaterialFlagCompactView
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemModifiedView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ReceiptItems.Views.ReceiptItemModifiedView
  Jovix.Application.V1.ReceiptItems.Views.ReceiptItemModifiedView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      receipt:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      lineNumber:
        format: int32
        type: integer
      shipmentItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shippingUnit:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.Views.LocationView'
      receivedQuantity:
        format: double
        type: number
      flags:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.MaterialFlags.Views.MaterialFlagCompactView
  Jovix.Application.V1.ReceiptItems.Views.ReceiptItemPost:
    type: object
    properties:
      receipt:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shipmentItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      receivedQuantity:
        format: double
        type: number
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.Views.LocationView'
      shippingUnit:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      flags:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.MaterialFlags.Views.MaterialFlagCompactView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ReceiptItems.Views.ReceiptItemResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      activityType:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.Projects.ProjectView'
      job:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobView'
      externalProjectId:
        type: string
      externalProjectName:
        type: string
      workBreakdownStructureId:
        format: int32
        type: integer
      workBreakdownStructureName:
        type: string
      startDate:
        format: date-time
        type: string
      finishDate:
        format: date-time
        type: string
      isActualStartDate:
        type: boolean
      isActualFinishDate:
        type: boolean
      totalFloat:
        format: int32
        type: integer
      freeFloat:
        format: int32
        type: integer
      activityCode1:
        type: string
      activityCode2:
        type: string
      activityCode3:
        type: string
      activityCode4:
        type: string
      activityCode5:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityPostResponse]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityPostResponse
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityPostResponse:
    type: object
    properties:
      id:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ScheduleActivities.Views.ScheduleActivityView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Shipments.Views.ShipmentView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Shipments.Views.ShipmentView'
  Jovix.Application.V1.Shipments.Views.ShipmentView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      toSite:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      fromSite:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      isTransfer:
        type: boolean
      billOfLading:
        type: string
      vehicleNumber:
        type: string
      grossWeight:
        type: string
      packingListNumber:
        type: string
      release:
        $ref: '#/definitions/Jovix.Application.V1.Shipments.Views.ReleaseView'
      arrival:
        $ref: >-
          #/definitions/Jovix.Application.V1.Shipments.Views.DateConfirmationView
      departure:
        $ref: >-
          #/definitions/Jovix.Application.V1.Shipments.Views.DateConfirmationView
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
  Jovix.Application.V1.Shipments.Views.ReleaseView:
    type: object
    properties:
      dateApproved:
        format: date-time
        type: string
  Jovix.Application.V1.Shipments.Views.DateConfirmationView:
    type: object
    properties:
      date:
        format: date-time
        type: string
      dateConfirmed:
        format: date-time
        type: string
      confirmationNotes:
        type: string
  Jovix.Application.V1.Shipments.ShipmentPost:
    required:
      - name
      - job
      - toSite
      - isTransfer
    type: object
    properties:
      name:
        maxLength: 150
        minLength: 0
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      fromSite:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      toSite:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdPost'
      isTransfer:
        type: boolean
      billOfLading:
        maxLength: 150
        minLength: 0
        type: string
      vehicleNumber:
        maxLength: 150
        minLength: 0
        type: string
      grossWeight:
        maxLength: 150
        minLength: 0
        type: string
      packingListNumber:
        maxLength: 150
        minLength: 0
        type: string
      departure:
        $ref: >-
          #/definitions/Jovix.Application.V1.Shipments.Views.DateConfirmationView
      arrival:
        $ref: >-
          #/definitions/Jovix.Application.V1.Shipments.Views.DateConfirmationView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Shipments.Views.ShipmentView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Shipments.Views.ShipmentView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView
  Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      lineNumber:
        format: int32
        type: integer
      subLineNumber:
        format: int32
        type: integer
      catalogItem:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shippingUnit:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      shipment:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      purchaseOrderDeliveryLine:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      material:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      materialStage:
        $ref: >-
          #/definitions/Jovix.Application.V1.MaterialStage.Views.MaterialStageView
      quantityExpected:
        format: double
        type: number
      packingListQuantity:
        format: double
        type: number
      dateConfirmedShipped:
        format: date-time
        type: string
      dateConfirmedArrived:
        format: date-time
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ShipmentItems.Views.ShipmentItemResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShipmentReleaseNotices.Views.ShipmentReleaseNoticeView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ShipmentReleaseNotices.Views.ShipmentReleaseNoticeView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.ShipmentReleaseNotices.Views.ShipmentReleaseNoticeView:
    type: object
    properties:
      name:
        type: string
  Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      barcode:
        type: string
      rfidTags:
        type: array
        items:
          type: string
      shippingUnitType:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      parentShippingUnit:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      supplier:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      purchaseOrder:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      shipment:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      location:
        $ref: '#/definitions/Jovix.Application.V1.Locations.Views.LocationView'
      specializedTrailer:
        type: boolean
      flags:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Inventory.InventoryItemFlag'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ShippingUnits.Views.ShippingUnitView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.ShippingUnitTypes.Views.ShippingUnitTypeResponseView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.ShippingUnitTypes.Views.ShippingUnitTypeResponseView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.ShippingUnitTypes.Views.ShippingUnitTypeResponseView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      isDefault:
        type: boolean
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Sites.Views.SiteResourceView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Sites.Views.SiteResourceView'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Sites.Views.SiteResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Sites.Views.SiteResourceView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Statuses.Repositories.StatusResourceView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.Statuses.Repositories.StatusResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Statuses.Repositories.StatusResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      isPicked:
        type: boolean
      isActive:
        type: boolean
      isIssuable:
        type: boolean
      isRequestable:
        type: boolean
      autoDisassociate:
        type: boolean
      autoReturnToStock:
        type: boolean
      autoEndPreventativeMaintenance:
        type: boolean
      showOnMap:
        type: boolean
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Statuses.Repositories.StatusResourceView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.Statuses.Repositories.StatusResourceView
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Statuses.Repositories.StatusResourceView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: >-
            #/definitions/Jovix.Application.V1.Statuses.Repositories.StatusResourceView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.TagAssociations.TagAssociation[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.TagAssociations.TagAssociation'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.TagAssociations.TagAssociation:
    type: object
    properties:
      id:
        format: int32
        type: integer
      inventoryItemId:
        format: int32
        type: integer
      rfidTagId:
        format: int32
        type: integer
      inventoryItemKey:
        type: string
      rfid:
        type: string
  Jovix.Application.V1.TagAssociations.NewTagAssociation:
    type: object
    properties:
      inventoryItemId:
        format: int32
        type: integer
      shippingUnitId:
        format: int32
        type: integer
      rfid:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.TagAssociations.Views.TagAssociationView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.TagAssociations.Views.TagAssociationView
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.TagAssociations.Views.TagAssociationView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      rfid:
        type: string
  Jovix.Application.Security.TokenResponse:
    type: object
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.UnitsOfMeasure.Views.UnitOfMeasureView]':
    type: object
    properties:
      data:
        $ref: >-
          #/definitions/Jovix.Application.V1.UnitsOfMeasure.Views.UnitOfMeasureView
  Jovix.Application.V1.UnitsOfMeasure.Views.UnitOfMeasureView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      project:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      name:
        type: string
      description:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Users.UserView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Users.UserView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Users.UserView:
    type: object
    properties:
      company:
        type: string
      email:
        type: string
      employee:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      firstName:
        type: string
      id:
        format: int32
        type: integer
      internalId:
        type: string
      isActive:
        type: boolean
      isLocked:
        type: boolean
      isMobileUser:
        type: boolean
      isSuperUser:
        type: boolean
      isSupplierUser:
        type: boolean
      isSupportUser:
        type: boolean
      isUserManager:
        type: boolean
      lastName:
        type: string
      middleName:
        type: string
      name:
        type: string
      phoneNumber:
        type: string
      title:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.NameView'
  Jovix.Application.V1.GenericViews.NameView:
    type: object
    properties:
      name:
        type: string
  Jovix.Application.V1.Users.Views.UserResourceView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      firstName:
        type: string
      middleName:
        type: string
      lastName:
        type: string
      internalId:
        type: string
      company:
        type: string
      isSupplierUser:
        type: boolean
      isLocked:
        type: boolean
      isMobileUser:
        type: boolean
      phone:
        type: string
      email:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.Users.Views.UserResourceView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.Users.Views.UserResourceView'
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Users.UserView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Users.UserView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Version.VersionInfo:
    type: object
    properties:
      api:
        type: string
      offlineTablet:
        type: string
      server:
        type: string
  'Jovix.Application.Response.ResponseContentForSingle[Jovix.Application.V1.WorkPackages.Views.WorkPackageView]':
    type: object
    properties:
      data:
        $ref: '#/definitions/Jovix.Application.V1.WorkPackages.Views.WorkPackageView'
  Jovix.Application.V1.WorkPackages.Views.WorkPackageView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      description:
        type: string
      job:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      workSite:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      status:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
      costCode:
        type: string
      system:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      area:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      building:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      discipline:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdView'
      plannedStartDate:
        format: date-time
        type: string
      requiredAtSiteDate:
        format: date-time
        type: string
      plannedFinishDate:
        format: date-time
        type: string
      estimatedManHours:
        format: double
        type: number
      notes:
        type: string
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Yards.Views.YardResponseView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Yards.Views.YardResponseView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Yards.Views.YardResponseView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      isActive:
        type: boolean
      job:
        $ref: '#/definitions/Jovix.Application.V1.Jobs.Views.JobView'
      name:
        type: string
      positionTop:
        format: double
        type: number
      positionLeft:
        format: double
        type: number
      positionRight:
        format: double
        type: number
      positionBottom:
        format: double
        type: number
      site:
        $ref: '#/definitions/Jovix.Application.V1.GenericViews.IdAndNameView'
  'Jovix.Application.Response.ResponseContent[System.String]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: string
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Yards.Views.YardResponseView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Yards.Views.YardResponseView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Zones.Views.ZoneResponseView]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        $ref: '#/definitions/Jovix.Application.V1.Zones.Views.ZoneResponseView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
  Jovix.Application.V1.Zones.Views.ZoneResponseView:
    type: object
    properties:
      id:
        format: int32
        type: integer
      name:
        type: string
      yard:
        $ref: '#/definitions/Jovix.Application.V1.Yards.Views.YardView'
  Jovix.Application.V1.Yards.Views.YardView:
    type: object
    properties:
      id:
        format: int32
        type: integer
  'Jovix.Application.Response.ResponseContent[Jovix.Application.V1.Zones.Views.ZoneResponseView[]]':
    type: object
    properties:
      expand:
        type: string
      fieldSets:
        type: string
      data:
        type: array
        items:
          $ref: '#/definitions/Jovix.Application.V1.Zones.Views.ZoneResponseView'
      links:
        $ref: '#/definitions/Jovix.Application.Response.PageLinks'
      totalCount:
        format: int32
        type: integer
